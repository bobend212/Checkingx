@page "/checking/{id:int}/details"
@inject ICheckingServiceClient CheckingService
@inject NavigationManager NavigationManager

<div class="card">
    <h5 class="card-header">Error Description</h5>
    <div class="card-body">
        <h5 class="card-title">@checking.Description</h5>
        <div>
            @if (checking.Images.Count > 0)
            {
                <MudCarousel Class="mud-width-full" ItemsSource="@checking.Images" Style="height: 700px" AutoCycle="false">
                    <ItemTemplate>
                        <div class="d-flex justify-center" style="height:100%">
                            <MudImage Src="@context.Data" ObjectFit="ObjectFit.Fill"></MudImage>
                        </div>
                    </ItemTemplate>
                </MudCarousel>
            }
        </div>
        <button class="btn btn-success" @onclick="(() => HandleCorrect())">Correct</button>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    Checking checking = new Checking();

    protected async override Task OnParametersSetAsync()
    {
        checking = await CheckingService.GetSingleChecking(Id);
    }

    async Task HandleCorrect()
    {
        checking.IsFixed = true;
        await CheckingService.FixError(checking);
        NavigationManager.NavigateTo($"/checking/{checking.ProjectId}");
    }



}
