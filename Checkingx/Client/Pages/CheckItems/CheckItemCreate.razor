@page "/new-checkItem"
@inject ICheckItemServiceClient CheckItemService
@inject NavigationManager NavigationManager
@inject Sotsera.Blazor.Toaster.IToaster Toaster

<div style="display: flex; justify-content:space-between; margin-bottom: 5px">
    <MudText Typo="Typo.h5">Check Item - New</MudText>
    <MudButton Variant="Variant.Outlined" Size="Size.Medium" Color="Color.Primary" @onclick="(() => BackToCheckItemList())">Back</MudButton>
</div>
<hr />

<MudForm @ref="form">
    <MudTextField T="string" Label="Title" Required="true" Variant="Variant.Filled" @bind-Value="checkItem.Title" />
    <MudTextField T=" string" Label="Category" Required="true" Variant="Variant.Filled" @bind-Value="checkItem.Category" />
    <MudSelect Dense="true" T="int" Label="Priority" Variant="Variant.Filled" AnchorOrigin="Origin.BottomCenter" @bind-Value="checkItem.Priority" Required="true">
        <MudSelectItem T="int" Value="1">1</MudSelectItem>
        <MudSelectItem T="int" Value="2">2</MudSelectItem>
        <MudSelectItem T="int" Value="3">3</MudSelectItem>
    </MudSelect>
    <div class="mt-2">
        <MudButton Variant="Variant.Filled" Size="Size.Medium" Color="Color.Success" @onclick="(() => HandleSubmit())">Submit</MudButton>
    </div>
</MudForm>


@code {
    CheckItem checkItem = new();
    MudForm? form;

    async Task HandleSubmit()
    {
        var result = await CheckItemService.CreateCheckItem(checkItem);
        if (result.CheckItemId != 0)
        {
            Toaster.Info($"New Item Created");
            NavigationManager.NavigateTo("/checkitem-list");
        }
        else
        {
            Toaster.Error($"Something went wrong");
        }
    }

    void BackToCheckItemList()
    {
        NavigationManager.NavigateTo("/checkitem-list");
    }

}
