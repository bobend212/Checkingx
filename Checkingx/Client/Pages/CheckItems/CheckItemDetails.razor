@page "/checkitem/{checkItemId:int}"
@inject ICheckItemServiceClient CheckItemService
@inject NavigationManager NavigationManager
@inject Sotsera.Blazor.Toaster.IToaster Toaster

<div style="display: flex; justify-content:space-between; margin-bottom: 5px">
    <MudText Typo="Typo.h5">Check Items - Details</MudText>
    <MudButton Variant="Variant.Outlined" Size="Size.Medium" Color="Color.Primary" StartIcon="@Icons.Filled.ArrowBackIosNew" @onclick="(() => BackToCheckItemList())">Back</MudButton>
</div>
<hr />

<MudForm @ref="form">
    <MudTextField T="string" Label="Title" Required="true" Variant="Variant.Filled" @bind-Value="checkItem.Title" />
    <MudTextField T=" string" Label="Category" Required="true" Variant="Variant.Filled" @bind-Value="checkItem.Category" />
    <MudSelect Dense="true" T="int" Label="Priority" Variant="Variant.Filled" AnchorOrigin="Origin.BottomCenter" @bind-Value="checkItem.Priority" Required="true">
        <MudSelectItem T="int" Value="1">1</MudSelectItem>
        <MudSelectItem T="int" Value="2">2</MudSelectItem>
        <MudSelectItem T="int" Value="3">3</MudSelectItem>
    </MudSelect>
    <div class="mt-2" style="display: flex; justify-content: space-between">
        <MudButton Variant="Variant.Filled" Size="Size.Medium" Color="Color.Success" @onclick="(() => HandleSubmit())">Update</MudButton>
        <MudButton Variant="Variant.Filled" Size="Size.Medium" Color="Color.Error" @onclick="(() => DeleteCheckItem())">Remove</MudButton>
    </div>
</MudForm>

<br />

<MudTimeline TimelinePosition="TimelinePosition.Left" TimelineOrientation="TimelineOrientation.Vertical">
    <MudTimelineItem Size="Size.Small" Color="Color.Success" Elevation="4">
        <MudCard Outlined="false" Elevation="4" Style="width:25%">
            <MudCardContent>
                <MudText Typo="Typo.h6">Create</MudText>
                <MudText Typo="Typo.body2">@checkItem.Create.ToString("dd/MMM/yyyy HH:MM")</MudText>
            </MudCardContent>
        </MudCard>
    </MudTimelineItem>
    @if (checkItem.Update != null)
    {
        <MudTimelineItem Size="Size.Small" Color="Color.Info" Elevation="4">
            <MudCard Outlined="false" Elevation="4" Style="width:25%">
                <MudCardContent>
                    <MudText Typo="Typo.h6">Update</MudText>
                    <MudText Typo="Typo.body2">@checkItem.Update?.ToString("dd/MMM/yyyy HH:MM")</MudText>
                </MudCardContent>
            </MudCard>
        </MudTimelineItem>
    }
</MudTimeline>

@code {
    [Parameter]
    public int CheckItemId { get; set; }

    CheckItem checkItem = new();
    MudForm? form;

    protected async override Task OnParametersSetAsync()
    {
        checkItem = await CheckItemService.GetSingleCheckItem(CheckItemId);
    }

    async Task HandleSubmit()
    {
        await CheckItemService.UpdateCheckItem(checkItem);
        Toaster.Success($"Check Item updated");
        NavigationManager.NavigateTo($"/checkitem-list/{checkItem.Category}");
    }

    async Task DeleteCheckItem()
    {
        await CheckItemService.DeleteCheckItem(checkItem.CheckItemId);
        Toaster.Success($"Check Item removed");
        NavigationManager.NavigateTo($"/checkitem-list/{checkItem.Category}");
    }

    void BackToCheckItemList()
    {
        NavigationManager.NavigateTo($"/checkitem-list/{checkItem.Category}");
    }
}
